import os
print(os.listdir("../input"))
import pandas as pd
df=pd.read_excel(r"../input/measurements2.xlsx")
x = df.iloc[:,[0,2,3,4,5,6,7,8,9]]
y = df.iloc[:,1]
from sklearn.preprocessing import Imputer
imputer = Imputer()
x.loc[:,['temp_inside']] = imputer.fit_transform(x.loc[:,['temp_inside']])
x.loc[:,['specials']] = x.loc[:,['specials']].fillna(' ')
from sklearn.preprocessing import LabelEncoder, OneHotEncoder
encoder = LabelEncoder()
x = pd.get_dummies(x, prefix=['specials', 'gas_type'], drop_first=True)
from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test = train_test_split(x,y, random_state=9, train_size = 0.8)
from sklearn.preprocessing import StandardScaler
scale_x = StandardScaler()
x_train.iloc[:,0:4] = scale_x.fit_transform(x_train.iloc[:,0:4])
x_test.iloc[:,0:4] = scale_x.fit_transform(x_test.iloc[:,0:4])
from sklearn.linear_model import LinearRegression
lin_reg = LinearRegression()
lin_reg.fit(x_train, y_train)
y_pred = lin_reg.predict(x_test)
from sklearn.metrics import mean_squared_error
rmse = mean_squared_error(y_test, y_pred)
y_sp98 = lin_reg.predict(x_test[x_test.loc[:,'gas_type_SP98']==1])
y_E10 = lin_reg.predict(x_test[x_test.loc[:,'gas_type_SP98']==0])
y_sp98.mean()
y_E10.mean()
diff_in_fuel_100km = y_E10.mean() - y_sp98.mean()
e10_100km = y_E10.mean() * 1.38
sp98_100km = y_sp98.mean() * 1.46
cost_diff = e10_100km - sp98_100km